dir()
 flows <- read.csv(file="seaflow_21min.csv",head=TRUE,sep=",")
q()
 flows <- read.csv(file="seaflow_21min.csv",head=TRUE,sep=",")
gedit
createDataPartition(flow, times = 1, p = 0.5)
load(caret)
library(caret)
createDataPartition(flows, times = 2, p = 0.5)
x <- rgamma(50, 3, .5)
x
typeof(x)
createDataPartition(flows, times = 2, p = 0.5)
createDataPartition(x, times = 2, p = 0.5)
createDataPartition(x, times = 2, p = 0.5)
a, b = createDataPartition(x, times = 2, p = 0.5)
a b = createDataPartition(x, times = 2, p = 0.5)
Resample1
$Resample1
createDataPartition(x, times = 2, p = 0.5)
inA <- createDataPartition(x, times = 2, p = 0.5)
inA
inA[1]
inA[2]
inA[3]
inA[1]
inA[1][0]
inA[1][1]
inA[1][2]
inA[1][1]
inA[1][1][1]
inA[2]
inA <- createDataPartition(x, times = 1, p = 0.5)
inA
inA <- createDataPartition(x, times = 2, p = 0.5)
inA
x <- rgamma(50, 3, .5)
x
x <- [1,2,3,4,5,6,7,8]
x <- list(1,2,3,4,5,6,7,8)
x
x[1]
x[2]
n = c(1,2,3)
n
inA <- createDataPartition(c(1,2,3,4,5,6,7,8), times = 2, p = 0.5)
inA
inA <- createDataPartition(c(1,2,3,4,5,6,7,8), times = 2, p = 0.5)
inA
createDataPartition(c(1,2,3,4,5,6,7,8), times = 2, p = 0.5)
createDataPartition(c(1,2,3,4,5,6,7,8), times = 2, p = 0.5)
createDataPartition(c(1,2,3,4,5,6,7,8), times = 2, p = 0.5)
inA <- createDataPartition(flows$pop, times = 2, p = 0.5)
inA
inA[1]
inA[2]
flows(inA[1])
typeof(flows)
flows
createDataPartition(c(11,12,13,14,15,16,17,18), times = 2, p = 0.5)
list(1,2,3,4)
unlist(list(1,2,3,4))
unlist(c(1,2,3,4))
createDataPartition(c(11,12,13,14,15,16,17,18), times = 2, p = 0.5)
a <- createDataPartition(c(11,12,13,14,15,16,17,18), times = 2, p = 0.5)
a[1]
a[2]
c(11,12,13,14,15,16,17,18)[a[2]]
c(11,12,13,14,15,16,17,18)[unlist(a[2])]
inA <- createDataPartition(flows$pop, times = 2, p = 0.5)
flows[inA[1]]
flows[unlist(inA[1])]
unlist(inA[1])
unlist(inA[2])
inA
flows[unlist(inA[1])]
flows[unlist(inA[1])]
inA[1]
flows[unlist(inA[1])]
flows[1]
flows[0]
 flows <- read.csv(file="seaflow_21min.csv", head=TRUE, sep=",")
flows[0]
flows[1]
 flows <- read.csv(file="seaflow_21min.csv", head=TRUE, sep=",")
flujos <- read.csv(file="seaflow_21min.csv", head=TRUE, sep=",")
flujos
flujos <- read.csv(file="seaflow_21min.csv", head=TRUE, sep=",")
flujos[1,1]
flujos[1,-1]
flujos[1,1:20]
flujos[1,1:10]
flujos[1,1:11]
flujos[1,1:12]
flujos[1,1:13]
flujos[1,1:12]
flujos[2,1:12]
flujos[1:2,1:12]
flujos[1:2,1:10]
inA <- createDataPartition(flows$pop, times = 2, p = 0.5)
inA <- createDataPartition(flows$pop, times = 2, p = 0.5)
library(caret)
inA <- createDataPartition(flows$pop, times = 2, p = 0.5)
flujos[inA[1],1:10]
flujos[unlist(inA[1]),1:10]
a <- flujos[unlist(inA[1]),1:10]
a[0]
a[0,0]
a[1, 1:10]
a[1:10, 1:10]
a <- flujos[unlist(inA[1]),1:10]
a
a <- flujos[unlist(inA[1]),1:9]
a
a <- flujos[unlist(inA[1]),1:12]
b <- flujos[unlist(inA[2]),1:12]
b
a
b <- flujos[unlist(inA[2]),1:12]
summary(a)
summary(b)
load(ggplot)
library(ggplot)
library(ggplot2)
aes
help(aes)
help(aes)
ggplot(data.frame(x=c(0, 2)), aes(x)) + stat_function(fun=exp)
ggplot(data.frame(stat_function(fun=exp)
ggplot(stat_function(fun=exp))
ggplot(stat_function(fun=exp))
ggplot(data.frame(x=c(0, 2)), aes(x)) + stat_function(fun=exp)
ggplot(data.frame(x=c(0, 2)), aes(x))
ggplot(data.frame(x=c(0, 2)), aes(x)) + stat_function(fun=exp)
eq <- function(x) {x*x}
tmp <- data.frame(x=1:50, y=eq(1:50))
p <- qplot(x, y, data=tmp, xlab="X-axis", ylab="Y-axis")
c <- stat_function(fun=eq)
print(p + c)
flujos$pe
flujos
flujos$pe
plot(flujos$pe, flujos$chl_small, type="l")
?plot
plot(flujos$pe, flujos$chl_small, type="p")
?plot
?plot
qplot(flujos$pe.Length, flujos$pe, flujos$chl_small, colour=flujos$pop)
qplot(flujos$pe.Length, flujos$pe, flujos$chl_small, colour=flujos$pop)
qplot(flujos$pe, flujos$chl_small, colour=flujos$pop)
library(rpat)
install.package("rpat")
install.packages("rpat")
install.packages("rpat")
install.packages("Rpat")
install.packages("rpat")
install.packages("rpart")
load(rpart)
library(rpart)
a
fol <- formula(response ~  fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small)
model <- rpart(fol, method="class", data=a)
response ~  fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small
fol <- formula(response ~  fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small)
model <- rpart(fol, method="class", data=a)
print(model)response ~  fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small
response ~  fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small
response
response ~  fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small
fol <- formula(response ~  fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small)
model <- rpart(fol, method="class", data=a)
response ~  fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small
fol <- formula(response ~  fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small)
model <- rpart(fol, method="class", data=a)
print(model)
model <- rpart(fol, method="class", data=a)
response ~  fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small
response
fol <- formula(response ~  fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small)
fol
model <- rpart(fol, method="class", data=training)
model <- rpart(fol, method="class", data=a)
fol <- formula(fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small)
fol <- formula(response ~  fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small)
?rpart
pop ~  fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small
fol <- formula(pop ~  fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small)
model <- rpart(fol, method="class", data=a)
print(model)
?predict
predict(model, b)
?predict
predict(model, b, type="vector")
predict(model, b, type="vector") == b$pop
predict(model, b, type="vector")
b$pop
predict(model, b, type="class")
predict(model, b, type="class")==b$pop
predict(model, b, type="class")==b$pop
prediction <- predict(model, b, type="class")==b$pop
prediction == TRUE
sum(prediction == TRUE)
prediction.Length
length(prediction)
sum(prediction == TRUE)/length(prediction)
library(randomForest)
model <- randomForest(fol, data=a)
predict(model, b, type="vector")
predict(model, b, type="vote")
predict(model, b)
prediction <- predict(model, b)
sum(prediction == TRUE)/length(prediction)
prediction <- prediction == b$pop
sum(prediction == TRUE)/length(prediction)
importance(model)
model <- svm(fol, data=a)
import(e1071)
library(e1071)
model <- svm(fol, data=a)
prediction <- predict(model, b)
prediction <- prediction == b$pop
sum(prediction == TRUE)/length(prediction)
predictions <- predict(model, b)
table(pred = predictions, true = b$pop)
model <- rpart(fol, method="class", data=a)
predictions <- predict(model, b)
table(pred = predictions, true = b$pop)
predict(model, b)
predict(model, b, type="vote")
predict(model, b, type="class")
predictions <- predict(model, b, type="class")
table(pred = predictions, true = b$pop)
model <- svm(fol, data=a)
predictions <- predict(model, b)
table(pred = predictions, true = b$pop)
a
qplot(flujos$pe.Length, flujos$pe, flujos$chl_small, colour=flujos$pop)
qplot(flujos$pe, flujos$chl_small, colour=flujos$pop)
qplot(flujos$fsc_small, flujos$fsc_perp)
qplot(flujos$fsc_small, flujos$fsc_big)
qplot(flujos$time, flujos$chl_big)
flujos <- read.csv(file="seaflow_21min.csv",head=TRUE,sep=",")
library(caret)
#remove file_id 208
flujos <- flujos[flujos$file_id!="208"]
filtered <- flujos[flujos$file_id!="208"]
flujos <- read.csv(file="seaflow_21min.csv",head=TRUE,sep=",")
filtered <- flujos[flujos$file_id!="208"]
flujos
flujos[1:2, 1:12]
filtered <- flujos[flujos$file_id!="208",]
inA <- createDataPartition(filtered$pop, times = 2, p = 0.5)
a <- flujos[unlist(inA[1]),1:12]
b <- flujos[unlist(inA[2]),1:12]
#predict with svm
library(e1071)
model <- svm(fol, data=a)
prediction <- predict(model, b)
prediction <- prediction == b$pop
sum(prediction == TRUE)/length(prediction)
qplot(filtered$time, filtered$chl_big)
a <- filtered[unlist(inA[1]),1:12]
b <- filtered[unlist(inA[2]),1:12]
#predict with svm
library(e1071)
model <- svm(fol, data=a)
prediction <- predict(model, b)
prediction <- prediction == b$pop
sum(prediction == TRUE)/length(prediction)
qplot(flujos$fsc_small, flujos$fsc_big)
